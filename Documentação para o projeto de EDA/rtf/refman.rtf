{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o para o projeto de EDA  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Documenta\'E7\'E3o para o projeto de EDA}
{\comment Gerado por doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o para o projeto de EDA}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
EDA-Project\par \pard\plain 
{\tc\tcl1 \v EDA-Project}
{\xe \v EDA-Project}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Projeto para a Unidade Curricular de Estruturas de Dados Avan\'E7adas.\par
}
 \par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Compila\'E7\'E3o
\par}
{\tc\tcl2 \v Compila\'E7\'E3o}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Para compilar o projeto, execute o seguinte comando no terminal:\par
mingw32-make.exe\par
}
 \par}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Execu\'E7\'E3o
\par}
{\tc\tcl2 \v Execu\'E7\'E3o}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Ap\'F3s a compila\'E7\'E3o bem-sucedida, execute o programa com um dos seguintes comandos:\par
./projectEDA.exe\par
ou\par
mingw32-make.exe; ./projectEDA.exe\par
}
 \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos componentes\par \pard\plain 
{\tc \v \'CDndice dos componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de componentes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de classes, estruturas, uni\'F5es e interfaces com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ED} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos ficheiros\par \pard\plain 
{\tc \v \'CDndice dos ficheiros}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de ficheiros\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos os ficheiros com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b EDA-Project/{\b aerial.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b aerial.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b fileUtils.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b fileUtils.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b gridUtils.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b gridUtils.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b interference.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b interference.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Project/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o da classe{\tc \v Documenta\'E7\'E3o da classe}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura ED\par \pard\plain 
{\tc\tcl2 \v ED}
{\xe \v ED}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\f2 #include <aerial.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b resonanceFrequency}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coordinateX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coordinateY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ED} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v coordinateX\:ED}
{\xe \v ED\:coordinateX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ED::coordinateX}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordinateY\:ED}
{\xe \v ED\:coordinateY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ED::coordinateY}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:ED}
{\xe \v ED\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ED}* ED::next}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resonanceFrequency\:ED}
{\xe \v ED\:resonanceFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char ED::resonanceFrequency}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Project/{\b aerial.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o do ficheiro{\tc \v Documenta\'E7\'E3o do ficheiro}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/aerial.c\par \pard\plain 
{\tc\tcl2 \v EDA-Project/aerial.c}
{\xe \v EDA-Project/aerial.c}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertAerialEnd} ({\b ED} **list, char resonanceFrequencyTmp, int coordinateXTmp, int coordinateYTmp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeAerial} ({\b ED} **list, int coordinateX, int coordinateY)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v insertAerialEnd\:aerial.c}
{\xe \v aerial.c\:insertAerialEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void insertAerialEnd ({\b ED} **  {\i list}, char  {\i resonanceFrequencyTmp}, int  {\i coordinateXTmp}, int  {\i coordinateYTmp})}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13 \{\par
14     ED *aux, *{\cf17 new} = malloc({\cf17 sizeof}(ED)); {\cf20 // Aloca\'E7\'E3o de mem\'F3ria para a nova antena}\par
15     {\cf19 if} ({\cf17 new} == NULL)                    {\cf20 // Verifica\'E7\'E3o da aloca\'E7\'E3o de mem\'F3ria}\par
16     \{\par
17         printf({\cf22 "Erro ao alocar mem\'F3ria para a nova antena\\n"});\par
18         {\cf19 return};\par
19     \}\par
20 \par
21     {\cf17 new}->resonanceFrequency = resonanceFrequencyTmp; {\cf20 // Atribui\'E7\'E3o da frequ\'EAncia de resson\'E2ncia}\par
22     {\cf17 new}->coordinateX = coordinateXTmp;               {\cf20 // Atribui\'E7\'E3o da coordenada X}\par
23     {\cf17 new}->coordinateY = coordinateYTmp;               {\cf20 // Atribui\'E7\'E3o da coordenada Y}\par
24     {\cf17 new}->next = NULL;                                {\cf20 //}\par
25 \par
26     {\cf19 if} (*list == NULL) {\cf20 // Se o conte\'FAdo da lista for nulo, ent\'E3o a nova antena passa a ser a primeira da lista}\par
27     \{\par
28         *list = {\cf17 new};\par
29         {\cf19 return};\par
30     \}\par
31     {\cf19 else} {\cf20 // Se a lista n\'E3o for nula, ent\'E3o a nova antena \'E9 inserida no fim da lista}\par
32     \{\par
33         aux = *list;      {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
34         {\cf19 while} (aux->next) {\cf20 // Enquanto aux for diferente de nulo, ou seja, enquanto n\'E3o chegar ao fim da lista}\par
35         \{\par
36             aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
37         \}\par
38         aux->next = {\cf17 new}; {\cf20 // O \'FAltimo registo da lista aponta para a nova antena}\par
39     \}\par
40 \}\par
}
}
{\xe \v removeAerial\:aerial.c}
{\xe \v aerial.c\:removeAerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeAerial ({\b ED} **  {\i list}, int  {\i coordinateX}, int  {\i coordinateY})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44 \{\par
45     {\cf19 if} (*list == NULL) {\cf20 // Verifica se a lista est\'E1 vazia}\par
46     \{\par
47         printf({\cf22 "Lista de antenas vazia. Nada para remover.\\n"});\par
48         {\cf19 return};\par
49     \}\par
50 \par
51     ED *current = *list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
52     ED *previous = NULL; {\cf20 // Vari\'E1vel auxiliar para guardar o registo anterior}\par
53 \par
54     {\cf20 // Percorre a lista \'E0 procura da antena}\par
55     {\cf19 while} (current != NULL)\par
56     \{\par
57         {\cf19 if} (current->coordinateX == coordinateX && current->coordinateY == coordinateY) {\cf20 // Verifica se a antena foi encontrada}\par
58         \{\par
59             {\cf20 // Remove a antena da lista}\par
60             {\cf19 if} (previous == NULL)\par
61             \{\par
62                 {\cf20 // Se for o primeiro elemento}\par
63                 *list = current->next;\par
64             \}\par
65             {\cf19 else}\par
66             \{\par
67                 {\cf20 // Se for um elemento do meio ou fim}\par
68                 previous->next = current->next;\par
69             \}\par
70 \par
71             free(current); {\cf20 // Liberta a mem\'F3ria alocada para a antena}\par
72             printf({\cf22 "Antena na posi\'E7\'E3o (%d, %d) removida com sucesso.\\n"}, coordinateX, coordinateY);\par
73             {\cf19 return};\par
74         \}\par
75 \par
76         previous = current;      {\cf20 // Guarda o registo anterior}\par
77         current = current->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo}\par
78     \}\par
79 \par
80     {\cf20 // A antena n\'E3o foi encontrada}\par
81     printf({\cf22 "Antena na posi\'E7\'E3o (%d, %d) n\'E3o encontrada.\\n"}, coordinateX, coordinateY);\par
82 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/aerial.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/aerial.h}
{\xe \v EDA-Project/aerial.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ED}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_LINE_LENGTH}\~ 1000\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ED} {\b ED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertAerialEnd} ({\b ED} **list, char resonanceFrequencyTmp, int coordinateXTmp, int coordinateYTmp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeAerial} ({\b ED} **list, int coordinateX, int coordinateY)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v MAX_LINE_LENGTH\:aerial.h}
{\xe \v aerial.h\:MAX_LINE_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_LINE_LENGTH\~ 1000}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v ED\:aerial.h}
{\xe \v aerial.h\:ED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ED} {\b ED}}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v insertAerialEnd\:aerial.h}
{\xe \v aerial.h\:insertAerialEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void insertAerialEnd ({\b ED} **  {\i list}, char  {\i resonanceFrequencyTmp}, int  {\i coordinateXTmp}, int  {\i coordinateYTmp})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13 \{\par
14     ED *aux, *{\cf17 new} = malloc({\cf17 sizeof}(ED)); {\cf20 // Aloca\'E7\'E3o de mem\'F3ria para a nova antena}\par
15     {\cf19 if} ({\cf17 new} == NULL)                    {\cf20 // Verifica\'E7\'E3o da aloca\'E7\'E3o de mem\'F3ria}\par
16     \{\par
17         printf({\cf22 "Erro ao alocar mem\'F3ria para a nova antena\\n"});\par
18         {\cf19 return};\par
19     \}\par
20 \par
21     {\cf17 new}->resonanceFrequency = resonanceFrequencyTmp; {\cf20 // Atribui\'E7\'E3o da frequ\'EAncia de resson\'E2ncia}\par
22     {\cf17 new}->coordinateX = coordinateXTmp;               {\cf20 // Atribui\'E7\'E3o da coordenada X}\par
23     {\cf17 new}->coordinateY = coordinateYTmp;               {\cf20 // Atribui\'E7\'E3o da coordenada Y}\par
24     {\cf17 new}->next = NULL;                                {\cf20 //}\par
25 \par
26     {\cf19 if} (*list == NULL) {\cf20 // Se o conte\'FAdo da lista for nulo, ent\'E3o a nova antena passa a ser a primeira da lista}\par
27     \{\par
28         *list = {\cf17 new};\par
29         {\cf19 return};\par
30     \}\par
31     {\cf19 else} {\cf20 // Se a lista n\'E3o for nula, ent\'E3o a nova antena \'E9 inserida no fim da lista}\par
32     \{\par
33         aux = *list;      {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
34         {\cf19 while} (aux->next) {\cf20 // Enquanto aux for diferente de nulo, ou seja, enquanto n\'E3o chegar ao fim da lista}\par
35         \{\par
36             aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
37         \}\par
38         aux->next = {\cf17 new}; {\cf20 // O \'FAltimo registo da lista aponta para a nova antena}\par
39     \}\par
40 \}\par
}
}
{\xe \v removeAerial\:aerial.h}
{\xe \v aerial.h\:removeAerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeAerial ({\b ED} **  {\i list}, int  {\i coordinateX}, int  {\i coordinateY})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44 \{\par
45     {\cf19 if} (*list == NULL) {\cf20 // Verifica se a lista est\'E1 vazia}\par
46     \{\par
47         printf({\cf22 "Lista de antenas vazia. Nada para remover.\\n"});\par
48         {\cf19 return};\par
49     \}\par
50 \par
51     ED *current = *list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
52     ED *previous = NULL; {\cf20 // Vari\'E1vel auxiliar para guardar o registo anterior}\par
53 \par
54     {\cf20 // Percorre a lista \'E0 procura da antena}\par
55     {\cf19 while} (current != NULL)\par
56     \{\par
57         {\cf19 if} (current->coordinateX == coordinateX && current->coordinateY == coordinateY) {\cf20 // Verifica se a antena foi encontrada}\par
58         \{\par
59             {\cf20 // Remove a antena da lista}\par
60             {\cf19 if} (previous == NULL)\par
61             \{\par
62                 {\cf20 // Se for o primeiro elemento}\par
63                 *list = current->next;\par
64             \}\par
65             {\cf19 else}\par
66             \{\par
67                 {\cf20 // Se for um elemento do meio ou fim}\par
68                 previous->next = current->next;\par
69             \}\par
70 \par
71             free(current); {\cf20 // Liberta a mem\'F3ria alocada para a antena}\par
72             printf({\cf22 "Antena na posi\'E7\'E3o (%d, %d) removida com sucesso.\\n"}, coordinateX, coordinateY);\par
73             {\cf19 return};\par
74         \}\par
75 \par
76         previous = current;      {\cf20 // Guarda o registo anterior}\par
77         current = current->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo}\par
78     \}\par
79 \par
80     {\cf20 // A antena n\'E3o foi encontrada}\par
81     printf({\cf22 "Antena na posi\'E7\'E3o (%d, %d) n\'E3o encontrada.\\n"}, coordinateX, coordinateY);\par
82 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aerial.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/aerial.h}
{\xe \v EDA-Project/aerial.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 // File: aerial.h}\par
2 {\cf20 // Desc: Este ficheiro cont\'E9m a defini\'E7\'E3o da estrutura de dados ED e as fun\'E7\'F5es para inserir e remover antenas de uma lista ligada.}\par
3 {\cf20 // Auth: Carlos Barreiro}\par
4 {\cf20 // Mail: a20360@alunos.ipca.pt}\par
5 {\cf20 // Date: 2025/03}\par
6 \par
7 {\cf21 #ifndef AERIAL_H}\par
8 {\cf21 #define AERIAL_H}\par
9 \par
10 {\cf21 #define MAX_LINE_LENGTH 1000 }{\cf20 // Constante para o tamanho m\'E1ximo da linha do ficheiro}\par
11 \par
12 {\cf20 // Estrutura de dados ED, representa as antenas}\par
13 {\cf17 typedef} {\cf17 struct }ED\par
14 \{\par
15     {\cf18 char} resonanceFrequency; {\cf20 // Frequ\'EAncia de resson\'E2ncia da antena}\par
16     {\cf18 int} coordinateX;         {\cf20 // Coordenada X da antena}\par
17     {\cf18 int} coordinateY;         {\cf20 // Coordenada Y da antena}\par
18     {\cf17 struct }ED *next;         {\cf20 // Ponteiro para a pr\'F3xima antena na lista}\par
19 \} ED;\par
20 \par
21 {\cf20 // Fun\'E7\'E3o para adicionar uma antena (fim da lista)}\par
22 {\cf18 void} insertAerialEnd(ED **list, {\cf18 char} resonanceFrequencyTmp, {\cf18 int} coordinateXTmp, {\cf18 int} coordinateYTmp);\par
23 \par
24 {\cf20 // Fun\'E7\'E3o para remover uma antena da lista}\par
25 {\cf18 void} removeAerial(ED **list, {\cf18 int} coordinateX, {\cf18 int} coordinateY);\par
26 \par
27 {\cf21 #endif }{\cf20 // AERIAL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/fileUtils.c\par \pard\plain 
{\tc\tcl2 \v EDA-Project/fileUtils.c}
{\xe \v EDA-Project/fileUtils.c}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "fileUtils.h"}\par
{\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadAerialsFromFile} ({\b ED} **list, const char *filename)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v loadAerialsFromFile\:fileUtils.c}
{\xe \v fileUtils.c\:loadAerialsFromFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loadAerialsFromFile ({\b ED} **  {\i list}, const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15     {\cf18 int} y = 1;                  {\cf20 // Para iniciar a coordenada Y}\par
16     {\cf18 char} line[MAX_LINE_LENGTH]; {\cf20 // Tamanho m\'E1ximo da linha do ficheiro}\par
17 \par
18     FILE *file = fopen(filename, {\cf22 "r"});\par
19     {\cf19 if} (file == NULL)\par
20     \{\par
21         {\cf19 return};\par
22     \}\par
23 \par
24     {\cf20 // L\'EA o ficheiro linha a linha}\par
25     {\cf19 while} (fgets(line, MAX_LINE_LENGTH, file) != NULL)\par
26     \{\par
27         {\cf18 int} x = 1; {\cf20 // Para iniciar a coordenada X}\par
28         {\cf20 // Percorre a linha}\par
29         {\cf19 for} ({\cf18 int} i = 0; line[i] != {\cf23 '\\0'} && line[i] != {\cf23 '\\n'}; i++) {\cf20 // Parar tamb\'E9m no \\n}\par
30         \{\par
31             {\cf19 if} (line[i] != {\cf23 ' '} && line[i] != {\cf23 '.'}) {\cf20 // Ignora espa\'E7os e pontos}\par
32             \{\par
33                 insertAerialEnd(list, line[i], x, y);\par
34             \}\par
35             {\cf20 // Incrementa X apenas para caracteres relevantes}\par
36             {\cf19 if} (line[i] != {\cf23 ' '}) {\cf20 // Espa\'E7os n\'E3o contam como posi\'E7\'F5es}\par
37             \{\par
38                 x++;\par
39             \}\par
40         \}\par
41         y++; {\cf20 // Incrementa a coordenada Y}\par
42     \}\par
43 \par
44     fclose(file);\par
45     printf({\cf22 "Dados carregados do ficheiro %s com sucesso!\\n"}, filename);\par
46 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/fileUtils.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/fileUtils.h}
{\xe \v EDA-Project/fileUtils.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadAerialsFromFile} ({\b ED} **list, const char *filename)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v loadAerialsFromFile\:fileUtils.h}
{\xe \v fileUtils.h\:loadAerialsFromFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loadAerialsFromFile ({\b ED} **  {\i list}, const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15     {\cf18 int} y = 1;                  {\cf20 // Para iniciar a coordenada Y}\par
16     {\cf18 char} line[MAX_LINE_LENGTH]; {\cf20 // Tamanho m\'E1ximo da linha do ficheiro}\par
17 \par
18     FILE *file = fopen(filename, {\cf22 "r"});\par
19     {\cf19 if} (file == NULL)\par
20     \{\par
21         {\cf19 return};\par
22     \}\par
23 \par
24     {\cf20 // L\'EA o ficheiro linha a linha}\par
25     {\cf19 while} (fgets(line, MAX_LINE_LENGTH, file) != NULL)\par
26     \{\par
27         {\cf18 int} x = 1; {\cf20 // Para iniciar a coordenada X}\par
28         {\cf20 // Percorre a linha}\par
29         {\cf19 for} ({\cf18 int} i = 0; line[i] != {\cf23 '\\0'} && line[i] != {\cf23 '\\n'}; i++) {\cf20 // Parar tamb\'E9m no \\n}\par
30         \{\par
31             {\cf19 if} (line[i] != {\cf23 ' '} && line[i] != {\cf23 '.'}) {\cf20 // Ignora espa\'E7os e pontos}\par
32             \{\par
33                 insertAerialEnd(list, line[i], x, y);\par
34             \}\par
35             {\cf20 // Incrementa X apenas para caracteres relevantes}\par
36             {\cf19 if} (line[i] != {\cf23 ' '}) {\cf20 // Espa\'E7os n\'E3o contam como posi\'E7\'F5es}\par
37             \{\par
38                 x++;\par
39             \}\par
40         \}\par
41         y++; {\cf20 // Incrementa a coordenada Y}\par
42     \}\par
43 \par
44     fclose(file);\par
45     printf({\cf22 "Dados carregados do ficheiro %s com sucesso!\\n"}, filename);\par
46 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fileUtils.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/fileUtils.h}
{\xe \v EDA-Project/fileUtils.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 // File: fileUtils.h}\par
2 {\cf20 // Desc: Declara\'E7\'F5es para fun\'E7\'F5es de manipula\'E7\'E3o de ficheiros}\par
3 {\cf20 // Auth: Carlos Barreiro}\par
4 {\cf20 // Mail: a20360@alunos.ipca.pt}\par
5 {\cf20 // Date: 2025/03}\par
6 \par
7 {\cf21 #ifndef FILE_UTILS_H}\par
8 {\cf21 #define FILE_UTILS_H}\par
9 \par
10 {\cf21 #include "aerial.h"} {\cf20 // Necess\'E1rio para a defini\'E7\'E3o de ED}\par
11 \par
12 {\cf20 // Fun\'E7\'E3o para carregar as antenas de um ficheiro}\par
13 {\cf18 void} loadAerialsFromFile(ED **list, {\cf17 const} {\cf18 char} *filename);\par
14 \par
15 {\cf21 #endif }{\cf20 // FILE_UTILS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/gridUtils.c\par \pard\plain 
{\tc\tcl2 \v EDA-Project/gridUtils.c}
{\xe \v EDA-Project/gridUtils.c}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "gridUtils.h"}\par
{\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getGridSize} ({\b ED} *list, int *xMax, int *yMax)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showAerialList} ({\b ED} *list)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getGridSize\:gridUtils.c}
{\xe \v gridUtils.c\:getGridSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getGridSize ({\b ED} *  {\i list}, int *  {\i xMax}, int *  {\i yMax})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15     *xMax = 0;      {\cf20 // Inicia o maior valor de X}\par
16     *yMax = 0;      {\cf20 // Inicia o maior valor de Y}\par
17     ED *aux = list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
18 \par
19     {\cf19 while} (aux != NULL)\par
20     \{\par
21         {\cf19 if} (aux->coordinateX > *xMax)\par
22         \{\par
23             *xMax = aux->coordinateX; {\cf20 // Atualiza o maior valor de X}\par
24         \}\par
25         {\cf19 if} (aux->coordinateY > *yMax)\par
26         \{\par
27             *yMax = aux->coordinateY; {\cf20 // Atualiza o maior valor de Y}\par
28         \}\par
29         aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
30     \}\par
31 \}\par
}
}
{\xe \v showAerialList\:gridUtils.c}
{\xe \v gridUtils.c\:showAerialList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showAerialList ({\b ED} *  {\i list})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35 \{\par
36     {\cf20 // Verifica o tamanho do grid}\par
37     {\cf18 int} xMax, yMax;\par
38     getGridSize(list, &xMax, &yMax); {\cf20 // Calcula o tamanho do grid}\par
39 \par
40     {\cf20 // Cria uma matriz para representar o grid}\par
41     {\cf18 char} grid[yMax][xMax];\par
42 \par
43     {\cf20 // Inicializa o grid com pontos: '.'}\par
44     {\cf19 for} ({\cf18 int} y = 0; y < yMax; y++)\par
45     \{\par
46         {\cf19 for} ({\cf18 int} x = 0; x < xMax; x++)\par
47         \{\par
48             grid[y][x] = {\cf23 '.'};\par
49         \}\par
50     \}\par
51 \par
52     {\cf20 // Preenche o grid com as frequ\'EAncias de resson\'E2ncia das antenas}\par
53     ED *aux = list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
54     {\cf19 while} (aux != NULL)\par
55     \{\par
56         {\cf19 if} (aux->coordinateX <= xMax && aux->coordinateY <= yMax && aux->coordinateX >= 1 && aux->coordinateY >= 1) {\cf20 // Verifica se as coordenadas est\'E3o dentro do grid}\par
57         \{\par
58             grid[aux->coordinateY - 1][aux->coordinateX - 1] = aux->resonanceFrequency; {\cf20 // Preenche o grid com a frequ\'EAncia de resson\'E2ncia da antena}\par
59         \}\par
60         aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
61     \}\par
62 \par
63     {\cf20 // Mostra o grid}\par
64     printf({\cf22 "\\n\\tAntenas:\\n"});\par
65     {\cf19 for} ({\cf18 int} y = 0; y < yMax; y++) {\cf20 // Percorre as linhas do grid}\par
66     \{\par
67         printf({\cf22 "\\t"});\par
68         {\cf19 for} ({\cf18 int} x = 0; x < xMax; x++) {\cf20 // Percorre as colunas do grid}\par
69         \{\par
70             printf({\cf22 "%c "}, grid[y][x]); {\cf20 // Mostra o conte\'FAdo do grid}\par
71         \}\par
72         printf({\cf22 "\\n"});\par
73     \}\par
74     printf({\cf22 "\\n"});\par
75 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/gridUtils.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/gridUtils.h}
{\xe \v EDA-Project/gridUtils.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getGridSize} ({\b ED} *list, int *xMax, int *yMax)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showAerialList} ({\b ED} *{\b ED})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getGridSize\:gridUtils.h}
{\xe \v gridUtils.h\:getGridSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getGridSize ({\b ED} *  {\i list}, int *  {\i xMax}, int *  {\i yMax})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15     *xMax = 0;      {\cf20 // Inicia o maior valor de X}\par
16     *yMax = 0;      {\cf20 // Inicia o maior valor de Y}\par
17     ED *aux = list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
18 \par
19     {\cf19 while} (aux != NULL)\par
20     \{\par
21         {\cf19 if} (aux->coordinateX > *xMax)\par
22         \{\par
23             *xMax = aux->coordinateX; {\cf20 // Atualiza o maior valor de X}\par
24         \}\par
25         {\cf19 if} (aux->coordinateY > *yMax)\par
26         \{\par
27             *yMax = aux->coordinateY; {\cf20 // Atualiza o maior valor de Y}\par
28         \}\par
29         aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
30     \}\par
31 \}\par
}
}
{\xe \v showAerialList\:gridUtils.h}
{\xe \v gridUtils.h\:showAerialList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showAerialList ({\b ED} *  {\i ED})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35 \{\par
36     {\cf20 // Verifica o tamanho do grid}\par
37     {\cf18 int} xMax, yMax;\par
38     getGridSize(list, &xMax, &yMax); {\cf20 // Calcula o tamanho do grid}\par
39 \par
40     {\cf20 // Cria uma matriz para representar o grid}\par
41     {\cf18 char} grid[yMax][xMax];\par
42 \par
43     {\cf20 // Inicializa o grid com pontos: '.'}\par
44     {\cf19 for} ({\cf18 int} y = 0; y < yMax; y++)\par
45     \{\par
46         {\cf19 for} ({\cf18 int} x = 0; x < xMax; x++)\par
47         \{\par
48             grid[y][x] = {\cf23 '.'};\par
49         \}\par
50     \}\par
51 \par
52     {\cf20 // Preenche o grid com as frequ\'EAncias de resson\'E2ncia das antenas}\par
53     ED *aux = list; {\cf20 // Vari\'E1vel auxiliar para percorrer a lista}\par
54     {\cf19 while} (aux != NULL)\par
55     \{\par
56         {\cf19 if} (aux->coordinateX <= xMax && aux->coordinateY <= yMax && aux->coordinateX >= 1 && aux->coordinateY >= 1) {\cf20 // Verifica se as coordenadas est\'E3o dentro do grid}\par
57         \{\par
58             grid[aux->coordinateY - 1][aux->coordinateX - 1] = aux->resonanceFrequency; {\cf20 // Preenche o grid com a frequ\'EAncia de resson\'E2ncia da antena}\par
59         \}\par
60         aux = aux->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo da lista}\par
61     \}\par
62 \par
63     {\cf20 // Mostra o grid}\par
64     printf({\cf22 "\\n\\tAntenas:\\n"});\par
65     {\cf19 for} ({\cf18 int} y = 0; y < yMax; y++) {\cf20 // Percorre as linhas do grid}\par
66     \{\par
67         printf({\cf22 "\\t"});\par
68         {\cf19 for} ({\cf18 int} x = 0; x < xMax; x++) {\cf20 // Percorre as colunas do grid}\par
69         \{\par
70             printf({\cf22 "%c "}, grid[y][x]); {\cf20 // Mostra o conte\'FAdo do grid}\par
71         \}\par
72         printf({\cf22 "\\n"});\par
73     \}\par
74     printf({\cf22 "\\n"});\par
75 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gridUtils.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/gridUtils.h}
{\xe \v EDA-Project/gridUtils.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 // File: gridUtils.h}\par
2 {\cf20 // Desc: Declara\'E7\'F5es para fun\'E7\'F5es relacionadas ao grid}\par
3 {\cf20 // Auth: Carlos Barreiro}\par
4 {\cf20 // Mail: a20360@alunos.ipca.pt}\par
5 {\cf20 // Date: 2025/03}\par
6 \par
7 {\cf21 #ifndef GRID_UTILS_H}\par
8 {\cf21 #define GRID_UTILS_H}\par
9 \par
10 {\cf21 #include "aerial.h"} {\cf20 // Necess\'E1rio para a defini\'E7\'E3o de ED}\par
11 \par
12 {\cf20 // Fun\'E7\'E3o para saber o tamanho do grid (/tabela)}\par
13 {\cf18 void} getGridSize(ED *list, {\cf18 int} *xMax, {\cf18 int} *yMax);\par
14 \par
15 {\cf20 // Fun\'E7\'E3o para imprimir a lista de antenas}\par
16 {\cf18 void} showAerialList(ED *ED);\par
17 \par
18 {\cf21 #endif }{\cf20 // GRID_UTILS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/interference.c\par \pard\plain 
{\tc\tcl2 \v EDA-Project/interference.c}
{\xe \v EDA-Project/interference.c}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "interference.h"}\par
{\f2 #include "aerial.h"}\par
{\f2 #include "gridUtils.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b interferencesED} ({\b ED} *list)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v interferencesED\:interference.c}
{\xe \v interference.c\:interferencesED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void interferencesED ({\b ED} *  {\i list})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\par
16     {\cf20 // Cria uma lista ligada interferencesED para guardar as interferencias}\par
17     ED *interferencesED = NULL;\par
18 \par
19     {\cf20 // Verifica se h\'E1 frequ\'EAncias de resson\'E2ncia repetidas}\par
20     {\cf18 int} hasDuplicates = 0;\par
21     ED *current = list;\par
22     {\cf19 while} (current != NULL)\par
23     \{\par
24         ED *temp = current->next; {\cf20 // Aponta para o pr\'F3ximo registo da lista}\par
25         {\cf19 while} (temp != NULL)\par
26         \{\par
27             {\cf20 // Compara a frequ\'EAncia atual com a pr\'F3xima}\par
28             {\cf19 if} (temp->resonanceFrequency == current->resonanceFrequency)\par
29             \{\par
30                 {\cf20 // Frequ\'EAncia repetida encontrada}\par
31                 hasDuplicates = 1;\par
32                 {\cf19 break};\par
33             \}\par
34             temp = temp->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo temp}\par
35         \}\par
36         {\cf19 if} (hasDuplicates) {\cf20 // Se encontrar uma frequ\'EAncia repetida, sai do loop}\par
37             {\cf19 break};\par
38         current = current->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo current}\par
39     \}\par
40 \par
41     {\cf19 if} (!hasDuplicates) {\cf20 // Se n\'E3o houver frequ\'EAncias repetidas, mostra a lista normal}\par
42     \{\par
43         printf({\cf22 "N\'E3o h\'E1 frequ\'EAncias de resson\'E2ncia repetidas.\\n"});\par
44         showAerialList(list);\par
45         {\cf19 return};\par
46     \}\par
47 \par
48     {\cf20 // Copia toda a lista ligada ED para a lista ligada interferencesED}\par
49     current = list;\par
50     {\cf19 while} (current != NULL)\par
51     \{\par
52         {\cf20 // Adiciona a antena \'E0 lista de interfer\'EAncias}\par
53         insertAerialEnd(&interferencesED, current->resonanceFrequency, current->coordinateX, current->coordinateY);\par
54         current = current->next;\par
55     \}\par
56 \par
57     {\cf20 // Processa cada frequ\'EAncia}\par
58     current = list;\par
59     {\cf19 while} (current != NULL)\par
60     \{\par
61         ED *other = current->next;\par
62         {\cf19 while} (other != NULL)\par
63         \{\par
64             {\cf20 // Verifica se as frequ\'EAncias s\'E3o iguais}\par
65             {\cf19 if} (current->resonanceFrequency == other->resonanceFrequency)\par
66             \{\par
67                 {\cf20 // Calcula a diferen\'E7a nas coordenadas}\par
68                 {\cf18 int} diffX = other->coordinateX - current->coordinateX;\par
69                 {\cf18 int} diffY = other->coordinateY - current->coordinateY;\par
70 \par
71                 {\cf20 // Verifica se a diferen\'E7a \'E9 pelo menos +2 ou -2 em X ou Y}\par
72                 {\cf19 if} (abs(diffX) >= 2 || abs(diffY) >= 2)\par
73                 \{\par
74                     {\cf20 // Calcula a primeira interfer\'EAncia (troca sinais do caminho)}\par
75                     {\cf18 int} interferenceX1 = current->coordinateX - diffX;\par
76                     {\cf18 int} interferenceY1 = current->coordinateY - diffY;\par
77 \par
78                     {\cf20 // Verifica se as coordenadas s\'E3o positivas}\par
79                     {\cf19 if} (interferenceX1 > 0 && interferenceY1 > 0)\par
80                     \{\par
81                         {\cf20 // Verifica se j\'E1 existe uma antena nesta posi\'E7\'E3o}\par
82                         {\cf18 int} isAerial = 0;\par
83                         ED *check = list;\par
84                         {\cf19 while} (check != NULL)\par
85                         \{\par
86                             {\cf19 if} (check->coordinateX == interferenceX1 && check->coordinateY == interferenceY1)\par
87                             \{\par
88                                 isAerial = 1;\par
89                                 {\cf19 break};\par
90                             \}\par
91                             check = check->next;\par
92                         \}\par
93 \par
94                         {\cf19 if} (!isAerial)\par
95                         \{\par
96                             insertAerialEnd(&interferencesED, {\cf23 '#'}, interferenceX1, interferenceY1);\par
97                         \}\par
98                     \}\par
99 \par
100                     {\cf20 // Calcula a segunda interfer\'EAncia (troca sinais do caminho)}\par
101                     {\cf18 int} interferenceX2 = other->coordinateX + diffX;\par
102                     {\cf18 int} interferenceY2 = other->coordinateY + diffY;\par
103 \par
104                     {\cf20 // Verifica se as coordenadas s\'E3o positivas}\par
105                     {\cf19 if} (interferenceX2 > 0 && interferenceY2 > 0)\par
106                     \{\par
107                         {\cf20 // Verifica se j\'E1 existe uma antena nesta posi\'E7\'E3o}\par
108                         {\cf18 int} isAerial = 0;\par
109                         ED *check = list;\par
110                         {\cf19 while} (check != NULL)\par
111                         \{\par
112                             {\cf19 if} (check->coordinateX == interferenceX2 && check->coordinateY == interferenceY2)\par
113                             \{\par
114                                 isAerial = 1;\par
115                                 {\cf19 break};\par
116                             \}\par
117                             check = check->next;\par
118                         \}\par
119 \par
120                         {\cf19 if} (!isAerial)\par
121                         \{\par
122                             insertAerialEnd(&interferencesED, {\cf23 '#'}, interferenceX2, interferenceY2);\par
123                         \}\par
124                     \}\par
125                 \}\par
126             \}\par
127             other = other->next;\par
128         \}\par
129         current = current->next;\par
130     \}\par
131 \par
132     {\cf20 // Mostra o grid com as interfer\'EAncias}\par
133     printf({\cf22 "\\nInterfer\'EAncias calculadas:\\n"});\par
134     showAerialList(interferencesED);\par
135 \par
136     {\cf20 // Liberta a mem\'F3ria da lista de interfer\'EAncias}\par
137     {\cf19 while} (interferencesED != NULL)\par
138     \{\par
139         ED *temp = interferencesED;\par
140         interferencesED = interferencesED->next;\par
141         free(temp);\par
142     \}\par
143 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/interference.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/interference.h}
{\xe \v EDA-Project/interference.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aerial.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b interferencesED} ({\b ED} *list)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v interferencesED\:interference.h}
{\xe \v interference.h\:interferencesED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void interferencesED ({\b ED} *  {\i list})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\par
16     {\cf20 // Cria uma lista ligada interferencesED para guardar as interferencias}\par
17     ED *interferencesED = NULL;\par
18 \par
19     {\cf20 // Verifica se h\'E1 frequ\'EAncias de resson\'E2ncia repetidas}\par
20     {\cf18 int} hasDuplicates = 0;\par
21     ED *current = list;\par
22     {\cf19 while} (current != NULL)\par
23     \{\par
24         ED *temp = current->next; {\cf20 // Aponta para o pr\'F3ximo registo da lista}\par
25         {\cf19 while} (temp != NULL)\par
26         \{\par
27             {\cf20 // Compara a frequ\'EAncia atual com a pr\'F3xima}\par
28             {\cf19 if} (temp->resonanceFrequency == current->resonanceFrequency)\par
29             \{\par
30                 {\cf20 // Frequ\'EAncia repetida encontrada}\par
31                 hasDuplicates = 1;\par
32                 {\cf19 break};\par
33             \}\par
34             temp = temp->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo temp}\par
35         \}\par
36         {\cf19 if} (hasDuplicates) {\cf20 // Se encontrar uma frequ\'EAncia repetida, sai do loop}\par
37             {\cf19 break};\par
38         current = current->next; {\cf20 // Avan\'E7a para o pr\'F3ximo registo current}\par
39     \}\par
40 \par
41     {\cf19 if} (!hasDuplicates) {\cf20 // Se n\'E3o houver frequ\'EAncias repetidas, mostra a lista normal}\par
42     \{\par
43         printf({\cf22 "N\'E3o h\'E1 frequ\'EAncias de resson\'E2ncia repetidas.\\n"});\par
44         showAerialList(list);\par
45         {\cf19 return};\par
46     \}\par
47 \par
48     {\cf20 // Copia toda a lista ligada ED para a lista ligada interferencesED}\par
49     current = list;\par
50     {\cf19 while} (current != NULL)\par
51     \{\par
52         {\cf20 // Adiciona a antena \'E0 lista de interfer\'EAncias}\par
53         insertAerialEnd(&interferencesED, current->resonanceFrequency, current->coordinateX, current->coordinateY);\par
54         current = current->next;\par
55     \}\par
56 \par
57     {\cf20 // Processa cada frequ\'EAncia}\par
58     current = list;\par
59     {\cf19 while} (current != NULL)\par
60     \{\par
61         ED *other = current->next;\par
62         {\cf19 while} (other != NULL)\par
63         \{\par
64             {\cf20 // Verifica se as frequ\'EAncias s\'E3o iguais}\par
65             {\cf19 if} (current->resonanceFrequency == other->resonanceFrequency)\par
66             \{\par
67                 {\cf20 // Calcula a diferen\'E7a nas coordenadas}\par
68                 {\cf18 int} diffX = other->coordinateX - current->coordinateX;\par
69                 {\cf18 int} diffY = other->coordinateY - current->coordinateY;\par
70 \par
71                 {\cf20 // Verifica se a diferen\'E7a \'E9 pelo menos +2 ou -2 em X ou Y}\par
72                 {\cf19 if} (abs(diffX) >= 2 || abs(diffY) >= 2)\par
73                 \{\par
74                     {\cf20 // Calcula a primeira interfer\'EAncia (troca sinais do caminho)}\par
75                     {\cf18 int} interferenceX1 = current->coordinateX - diffX;\par
76                     {\cf18 int} interferenceY1 = current->coordinateY - diffY;\par
77 \par
78                     {\cf20 // Verifica se as coordenadas s\'E3o positivas}\par
79                     {\cf19 if} (interferenceX1 > 0 && interferenceY1 > 0)\par
80                     \{\par
81                         {\cf20 // Verifica se j\'E1 existe uma antena nesta posi\'E7\'E3o}\par
82                         {\cf18 int} isAerial = 0;\par
83                         ED *check = list;\par
84                         {\cf19 while} (check != NULL)\par
85                         \{\par
86                             {\cf19 if} (check->coordinateX == interferenceX1 && check->coordinateY == interferenceY1)\par
87                             \{\par
88                                 isAerial = 1;\par
89                                 {\cf19 break};\par
90                             \}\par
91                             check = check->next;\par
92                         \}\par
93 \par
94                         {\cf19 if} (!isAerial)\par
95                         \{\par
96                             insertAerialEnd(&interferencesED, {\cf23 '#'}, interferenceX1, interferenceY1);\par
97                         \}\par
98                     \}\par
99 \par
100                     {\cf20 // Calcula a segunda interfer\'EAncia (troca sinais do caminho)}\par
101                     {\cf18 int} interferenceX2 = other->coordinateX + diffX;\par
102                     {\cf18 int} interferenceY2 = other->coordinateY + diffY;\par
103 \par
104                     {\cf20 // Verifica se as coordenadas s\'E3o positivas}\par
105                     {\cf19 if} (interferenceX2 > 0 && interferenceY2 > 0)\par
106                     \{\par
107                         {\cf20 // Verifica se j\'E1 existe uma antena nesta posi\'E7\'E3o}\par
108                         {\cf18 int} isAerial = 0;\par
109                         ED *check = list;\par
110                         {\cf19 while} (check != NULL)\par
111                         \{\par
112                             {\cf19 if} (check->coordinateX == interferenceX2 && check->coordinateY == interferenceY2)\par
113                             \{\par
114                                 isAerial = 1;\par
115                                 {\cf19 break};\par
116                             \}\par
117                             check = check->next;\par
118                         \}\par
119 \par
120                         {\cf19 if} (!isAerial)\par
121                         \{\par
122                             insertAerialEnd(&interferencesED, {\cf23 '#'}, interferenceX2, interferenceY2);\par
123                         \}\par
124                     \}\par
125                 \}\par
126             \}\par
127             other = other->next;\par
128         \}\par
129         current = current->next;\par
130     \}\par
131 \par
132     {\cf20 // Mostra o grid com as interfer\'EAncias}\par
133     printf({\cf22 "\\nInterfer\'EAncias calculadas:\\n"});\par
134     showAerialList(interferencesED);\par
135 \par
136     {\cf20 // Liberta a mem\'F3ria da lista de interfer\'EAncias}\par
137     {\cf19 while} (interferencesED != NULL)\par
138     \{\par
139         ED *temp = interferencesED;\par
140         interferencesED = interferencesED->next;\par
141         free(temp);\par
142     \}\par
143 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
interference.h\par \pard\plain 
{\tc\tcl2 \v EDA-Project/interference.h}
{\xe \v EDA-Project/interference.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 // File: interference.h}\par
2 {\cf20 // Desc: Declara\'E7\'F5es para fun\'E7\'F5es de c\'E1lculo das interfer\'EAncias}\par
3 {\cf20 // Auth: Carlos Barreiro}\par
4 {\cf20 // Mail: a20360@alunos.ipca.pt}\par
5 {\cf20 // Date: 2025/03}\par
6 \par
7 {\cf21 #ifndef INTERFERENCE_H}\par
8 {\cf21 #define INTERFERENCE_H}\par
9 \par
10 {\cf21 #include "aerial.h"} {\cf20 // Necess\'E1rio para a defini\'E7\'E3o de ED}\par
11 \par
12 {\cf20 // Fun\'E7\'E3o para calcular e mostrar as interfer\'EAncias}\par
13 {\cf18 void} interferencesED(ED *list);\par
14 \par
15 {\cf21 #endif }{\cf20 // INTERFERENCE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/main.c\par \pard\plain 
{\tc\tcl2 \v EDA-Project/main.c}
{\xe \v EDA-Project/main.c}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <windows.h>}\par
{\f2 #include "aerial.h"}\par
{\f2 #include "fileUtils.h"}\par
{\f2 #include "gridUtils.h"}\par
{\f2 #include "interference.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\par
17     SetConsoleOutputCP(65001); {\cf20 // Define a codifica\'E7\'E3o do terminal para UTF-8}\par
18 \par
19     {\cf18 int} choice, coordinateX, coordinateY;\par
20     {\cf18 char} resonanceFrequency, loadChoice, retryChoice;\par
21     ED *list = NULL;\par
22 \par
23     {\cf20 // Carregar o ficheiro ou n\'E3o}\par
24     printf({\cf22 "Carregar a posi\'E7\'E3o das antenas de um ficheiro? (s/n): "});\par
25     scanf({\cf22 " %c"}, &loadChoice);\par
26 \par
27     {\cf19 if} (loadChoice == {\cf23 's'} || loadChoice == {\cf23 'S'})\par
28     \{\par
29         {\cf18 char} filename[100];\par
30         {\cf19 do}\par
31         \{\par
32             printf({\cf22 "Qual o nome do ficheiro: "});\par
33             scanf({\cf22 "%s"}, filename);\par
34 \par
35             {\cf20 // Tenta carregar o arquivo diretamente}\par
36             loadAerialsFromFile(&list, filename);\par
37 \par
38             {\cf20 // Verifica se a lista foi preenchida (arquivo carregado com sucesso)}\par
39             {\cf19 if} (list == NULL)\par
40             \{\par
41                 printf({\cf22 "Erro ao abrir o ficheiro %s. Deseja tentar novamente? (s/n): "}, filename);\par
42                 scanf({\cf22 " %c"}, &retryChoice);\par
43                 {\cf19 if} (retryChoice == {\cf23 'n'} || retryChoice == {\cf23 'N'})\par
44                 \{\par
45                     {\cf19 break};\par
46                 \}\par
47             \}\par
48             {\cf19 else}\par
49             \{\par
50                 {\cf19 break}; {\cf20 // Sai do loop se o arquivo foi carregado com sucesso}\par
51             \}\par
52         \} {\cf19 while} (1);\par
53     \}\par
54     {\cf19 else}\par
55     \{\par
56         printf({\cf22 "A criar uma nova lista vazia...\\n"});\par
57     \}\par
58 \par
59     {\cf19 do}\par
60     \{\par
61         printf({\cf22 "\\n\\t0 - Sair\\n\\t1 - Inserir na lista\\n\\t2 - Mostrar a lista\\n\\t3 - Remover da lista\\n\\t4 - Mostrar interfer\'EAncias\\n\\tEscolha uma op\'E7\'E3o: "});\par
62         scanf({\cf22 "%d"}, &choice);\par
63 \par
64         {\cf19 switch} (choice)\par
65         \{\par
66         {\cf19 case} 1:\par
67             printf({\cf22 "Insira a frequ\'EAncia de resson\'E2ncia da antena: "});\par
68             scanf({\cf22 " %c"}, &resonanceFrequency);\par
69             printf({\cf22 "Insira a coordenada X da antena: "});\par
70             scanf({\cf22 "%d"}, &coordinateX);\par
71             printf({\cf22 "Insira a coordenada Y da antena: "});\par
72             scanf({\cf22 "%d"}, &coordinateY);\par
73             insertAerialEnd(&list, resonanceFrequency, coordinateX, coordinateY);\par
74             {\cf19 break};\par
75         {\cf19 case} 2:\par
76             showAerialList(list);\par
77             {\cf19 break};\par
78         {\cf19 case} 3:\par
79             printf({\cf22 "Insira a coordenada X da antena a remover: "});\par
80             scanf({\cf22 "%d"}, &coordinateX);\par
81             printf({\cf22 "Insira a coordenada Y da antena a remover: "});\par
82             scanf({\cf22 "%d"}, &coordinateY);\par
83             removeAerial(&list, coordinateX, coordinateY);\par
84             {\cf19 break};\par
85         {\cf19 case} 4:\par
86             interferencesED(list);\par
87             {\cf19 break};\par
88         {\cf19 default}:\par
89             {\cf19 break};\par
90         \}\par
91     \} {\cf19 while} (choice != 0);\par
92 \par
93     {\cf19 return} 0;\par
94 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Project/README.md\par \pard\plain 
{\tc\tcl2 \v EDA-Project/README.md}
{\xe \v EDA-Project/README.md}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
